# This Source Code Form is subject to the terms of the Mozilla Public
# License, v. 2.0. If a copy of the MPL was not distributed with this
# file, You can obtain one at http://mozilla.org/MPL/2.0/.

name: "(A) 📦️ Package"

on:
  workflow_dispatch:
    inputs:
      platform:
        type: choice
        options:
          - win-x64
          - linux-x64
      runtime_artifact_workflow_run_id:
        type: string
        required: true

run-name: 📦️ Package ${{inputs.platform == 'win-x64' && 'Windows x64' || 'Linux x64'}}
jobs:
  main:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          repository: 'nyanrus/noraneko-runtime'
          submodules: "recursive"
      - uses: actions/checkout@v4
        with:
          path: "noraneko"
      - uses: pnpm/action-setup@v4
        with:
          version: 9
          run_install: false
      - uses: actions/setup-node@v4
        with:
          node-version: 20
      - name: Setup Noraneko
        run: |

          cd $GITHUB_WORKSPACE

          cd ./noraneko
          pnpm install
          cd ..
      - name: Setup 🪛
        run: |
          sudo apt install msitools -y

          ./mach --no-interactive bootstrap --application-choice browser_artifact_mode
      - name: Write Versions
        run: |

          cd ./noraneko
          pnpm build --write-version
          cd ..
      - name: Mach configure
        run: |

          cp ./.github/workflows/mozconfigs/win64.mozconfig mozconfig
          # Copy Noraneko Branding
          cp -r ./noraneko/gecko/branding/* ./browser/branding/

          mkdir noraneko/gecko/config/autogenerated
          echo "$(cat browser/config/version.txt)@$(cat noraneko/gecko/config/version.txt)" >> noraneko/gecko/config/autogenerated/version.txt
          echo "$(cat browser/config/version_display.txt)@$(cat noraneko/gecko/config/version_display.txt)" >> noraneko/gecko/config/autogenerated/version_display.txt
          echo "ac_add_options --with-version-file-path=noraneko/gecko/config/autogenerated" >> mozconfig
          # sed -i 's|ac_add_options --disable-maintenance-service|#ac_add_options --disable-maintenance-service|g' ./mozconfig
          sed -i 's|ac_add_options --disable-updater||g' ./mozconfig
          sed -i 's|ac_add_options --enable-unverified-updates||g' ./mozconfig
          sed -i 's|https://@MOZ_APPUPDATE_HOST@/update/6/%PRODUCT%/%VERSION%/%BUILD_ID%/%BUILD_TARGET%/%LOCALE%/%CHANNEL%/%OS_VERSION%/%SYSTEM_CAPABILITIES%/%DISTRIBUTION%/%DISTRIBUTION_VERSION%/update.xml|https://github.com/nyanrus/noraneko/releases/download/%VERSION%/%BUILD_TARGET%-%CHANNEL%-%OS_VERSION%-update.xml|g' ./build/application.ini.in

          echo "ac_add_options --enable-release" >> mozconfig
          echo "ac_add_options --enable-update-channel=alpha" >> mozconfig
          echo "ac_add_options --enable-artifact-builds" >> mozconfig

          sed -i 's|MOZ_BRANDING_DIRECTORY=browser/branding/unofficial|MOZ_BRANDING_DIRECTORY=browser/branding/noraneko-unofficial|g' ./browser/confvars.sh
          sed -i 's|ac_add_options --enable-chrome-format=flat||g' ./mozconfig

          ./mach configure
          git apply --ignore-space-change --ignore-whitespace .github/patches/packaging/*.patch
      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: ${{inputs.platform == 'win-x64' && 'noraneko-win-amd64-moz-artifact'}}
          run-id: ${{inputs.runtime_artifact_workflow_run_id}}
          github-token: ${{github.token}}
          repository: "nyanrus/noraneko-runtime"
          path: ~/

      - name: Build noraneko
        run: |

          cd ./noraneko
          NODE_ENV='production' pnpm build --release-build-before
          cd ..

      - name: build
        run: |
          MOZ_ARTIFACT_FILE=$(echo ~/noraneko-*.win64.zip) ./mach build
      - name: Inject noraneko
        run: |

          cd ./noraneko
          pnpm build --release-build-after

          # https://www.spinics.net/lists/git/msg391750.html
          rsync -aL ../obj-x86_64-pc-windows-msvc/dist/bin/ ../obj-x86_64-pc-windows-msvc/dist/tmp__bin
          rm -rf ../obj-x86_64-pc-windows-msvc/dist/bin
          mv ../obj-x86_64-pc-windows-msvc/dist/tmp__bin ../obj-x86_64-pc-windows-msvc/dist/bin

          git apply --reject ./scripts/git-patches/patches/*.patch --directory ../obj-x86_64-pc-windows-msvc/dist/bin --unsafe-paths --check --apply
          cd ..
      - name: Package noraneko
        run: |
          ./mach package
      - name: Download artifact of MAR tools
        uses: actions/download-artifact@v4
        with:
          name: ${{'noraneko-dist-host'}}
          run-id: ${{inputs.runtime_artifact_workflow_run_id}}
          github-token: ${{github.token}}
          repository: "nyanrus/noraneko-runtime"
          path: obj-x86_64-pc-windows-msvc/dist/host

      - name: Download artifact of binary for getting buildid
        uses: actions/download-artifact@v4
        with:
          name: ${{'noraneko-win-amd64-dev'}}
          run-id: ${{inputs.runtime_artifact_workflow_run_id}}
          github-token: ${{github.token}}
          repository: "nyanrus/noraneko-runtime"
          path: ~/noraneko-dev

      - name: Create MAR package
        run: |
          7za x ~/noraneko-dev/noraneko-133.0.4.en-US.win64.zip -o"$(echo ~)/noraneko-dev"

          chmod +x $(echo ./obj-*)/dist/host/bin/mar
          mkdir ~/noraneko-mar
          touch "$(echo ./obj-*)/dist/noraneko/precomplete"
          MAR="$(echo ./obj-*)/dist/host/bin/mar" MOZ_PRODUCT_VERSION=$(cat noraneko/gecko/config/version.txt) MAR_CHANNEL_ID=alpha ./tools/update-packaging/make_full_update.sh ~/noraneko-mar/noraneko-win-amd64-full.mar "$(echo ./obj-*)/dist/noraneko"

          awk -F "=" '/^Version/ {print $2}' "$(echo ~)/noraneko-dev/noraneko/application.ini" > ~/noraneko-mar/version.txt
          cp noraneko/gecko/config/version.txt ~/noraneko-mar/noraneko_version.txt
          echo "$(cat ~/noraneko-mar/version.txt)@$(cat ~/noraneko-mar/noraneko_version.txt)" > ~/noraneko-mar/version_display.txt

          shasum --algorithm 512 ~/noraneko-mar/noraneko-win-amd64-full.mar | cut -c 1-128 > ~/noraneko-mar/mar_shasum.txt
          stat --format "%s" ~/noraneko-mar/noraneko-win-amd64-full.mar > ~/noraneko-mar/mar_size.txt

          awk -F "=" '/BuildID/ {print $2}' "$(echo ~)/noraneko-dev/noraneko/application.ini" > ~/noraneko-mar/buildid.txt

          mkdir ~/noraneko-publish

          echo "{" >> ~/noraneko-publish/meta.json
          echo "\"version_display\":\"$(cat ~/noraneko-mar/version_display.txt)\"," >> ~/noraneko-publish/meta.json
          echo "\"version\":\"$(cat ~/noraneko-mar/version.txt)\"," >> ~/noraneko-publish/meta.json
          echo "\"noraneko_version\":\"$(cat ~/noraneko-mar/noraneko_version.txt)\"," >> ~/noraneko-publish/meta.json
          echo "\"mar_size\":\"$(cat ~/noraneko-mar/mar_size.txt)\"," >> ~/noraneko-publish/meta.json
          echo "\"mar_shasum\":\"$(cat ~/noraneko-mar/mar_shasum.txt)\"," >> ~/noraneko-publish/meta.json
          echo "\"buildid\":\"$(cat ~/noraneko-mar/buildid.txt)\"" >> ~/noraneko-publish/meta.json
          echo "}" >> ~/noraneko-publish/meta.json

          cp ~/noraneko-mar/*.mar ~/noraneko-publish
      - name: Publish Package 🎁
        uses: actions/upload-artifact@v4
        with:
          name: noraneko-win-amd64-moz-artifact
          path: obj-x86_64-pc-windows-msvc/dist/noraneko-*.zip
      - name: Publish Installer 🎁
        uses: actions/upload-artifact@v4
        with:
          name: noraneko-win-amd64-installer
          path: obj-x86_64-pc-windows-msvc/dist/install/sea/*
      - name: Publish MAR 🎁
        uses: actions/upload-artifact@v4
        with:
          name: noraneko-win-amd64-mar-full
          path: ~/noraneko-publish/*
